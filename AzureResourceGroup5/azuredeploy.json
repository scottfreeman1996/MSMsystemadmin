{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
     "apim_name": {
            "type": "string",
            "defaultValue": "APIM-MSM"
        },
        "api_name": {
            "type": "string",
            "defaultValue": "MSMAPI"
        },
        
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the key vault."
      }
    },
    "openapi_json": {
            "type": "string",
            "defaultValue": "{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Competencies",
    "description" : "All endpoints for creating,updating and reading Competencies",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://apim-msm.portal.azure-api.net"
  } ],
  "paths" : {
    "/competency/view" : {
      "get" : {
        "tags" : [ "Competency" ],
        "summary" : "View all competencies",
        "responses" : {
          "200" : {
            "description" : "A JSON array of competencies",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Competency"
                }
              }
            }
          }
        }
      }
    },
    "/comptency/view/{CompetencyCategory}" : {
      "get" : {
        "tags" : [ "Competency" ],
        "summary" : "View all Competencies by category",
        "parameters" : [ {
          "name" : "CompetencyCategory",
          "in" : "path",
          "description" : "Category of competency",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON array of company skills by category",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Competency"
                }
              }
            }
          }
        }
      }
    },
    "/competency/update/{competencyID}" : {
      "put" : {
        "tags" : [ "Competency" ],
        "summary" : "Update competency",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "competencyID",
          "in" : "path",
          "description" : "ID of the competency to change",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Update a competency",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Competency"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated"
          },
          "401" : {
            "description" : "Invalid Permissions"
          },
          "404" : {
            "description" : "Resource not found (Invalid competencyID)"
          }
        }
      }
    },
    "/competency/create" : {
      "post" : {
        "tags" : [ "Competency" ],
        "summary" : "Create a new competency",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Created competency object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Competency"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Invalid Permissions"
          }
        }
      }
    },
    "/SFIA/view" : {
      "get" : {
        "tags" : [ "SFIA" ],
        "summary" : "View all SFIA skills",
        "responses" : {
          "200" : {
            "description" : "A JSON array of SFIA skills",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SFIA"
                }
              }
            }
          }
        }
      }
    },
    "/SFIA/view/{SkillCategory}" : {
      "get" : {
        "tags" : [ "SFIA" ],
        "summary" : "View all SFIA Skills by category",
        "parameters" : [ {
          "name" : "SkillCategory",
          "in" : "path",
          "description" : "Category of SFIA Skill",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON array of company skills by category",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SFIA"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found (Invalid Category)"
          }
        }
      }
    },
    "/CompanySkill/view/{SkillCategory}/{SkillSubCategory}" : {
      "get" : {
        "tags" : [ "SFIA" ],
        "summary" : "View all SFIA Skills by subcategory of a category",
        "parameters" : [ {
          "name" : "SkillCategory",
          "in" : "path",
          "description" : "Category of SFIA Skill",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SkillSubCategory",
          "in" : "path",
          "description" : "SubCategory of SFIA Skill Category",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON array of company skills by subcategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SFIA"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found (Invalid category)"
          }
        }
      }
    },
    "/SFIA/update/{SkillID}" : {
      "put" : {
        "tags" : [ "SFIA" ],
        "summary" : "Update a SFIA skill",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SkillID",
          "in" : "path",
          "description" : "ID of the SFIA skill to change",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Update a SFIA skill",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SFIA"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated"
          },
          "401" : {
            "description" : "Invalid Permissions"
          },
          "404" : {
            "description" : "Resource not found (Invalid SkillID)"
          }
        }
      }
    },
    "/SFIA/create" : {
      "post" : {
        "tags" : [ "SFIA" ],
        "summary" : "Create a new Skill",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Created Skill object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Competency"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Invalid Permissions"
          }
        }
      }
    },
    "/CompanySkill/view" : {
      "get" : {
        "tags" : [ "CompanySkill" ],
        "summary" : "View all Company skills",
        "responses" : {
          "200" : {
            "description" : "A JSON array of Company skills",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanySkill"
                }
              }
            }
          }
        }
      }
    },
    "/CompanySkill/view/{CompanySkillCategory}" : {
      "get" : {
        "tags" : [ "CompanySkill" ],
        "summary" : "View all Company Skills by category",
        "parameters" : [ {
          "name" : "CompanySkillCategory",
          "in" : "path",
          "description" : "Category of Company Skill",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON array of company skills by category",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanySkill"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found (Invalid Category)"
          }
        }
      }
    },
    "/CompanySkill/view/{CompanySkillCategory}/{CompanySkillSubCategory}" : {
      "get" : {
        "tags" : [ "CompanySkill" ],
        "summary" : "View all Company Skills by subcategory of a company skill category",
        "parameters" : [ {
          "name" : "CompanySkillCategory",
          "in" : "path",
          "description" : "Category of Company Skill",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "CompanySkillSubCategory",
          "in" : "path",
          "description" : "SubCategory of Company Skill Category",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON array of company skills by subcategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanySkill"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found (Invalid Category)"
          }
        }
      }
    },
    "/CompanySkill/update/{CompanySkillID}" : {
      "put" : {
        "tags" : [ "CompanySkill" ],
        "summary" : "Update a Company skill",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "CompanySkillID",
          "in" : "path",
          "description" : "ID of the Company skill to change",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Update a Company skill",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompanySkill"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated"
          },
          "401" : {
            "description" : "Invalid Permissions"
          },
          "404" : {
            "description" : "Resource not found (Invalid CompanySkillID)"
          }
        }
      }
    },
    "/CompanySkill/create" : {
      "post" : {
        "tags" : [ "CompanySkill" ],
        "summary" : "Create a new Company Skill",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Created CompanySkill object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompanySkill"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Invalid Permissions"
          }
        }
      }
    },
    "/role/view" : {
      "get" : {
        "tags" : [ "Role" ],
        "summary" : "View all roles",
        "responses" : {
          "200" : {
            "description" : "A JSON array of all roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              }
            }
          }
        }
      }
    },
    "/role/update/{RoleID}" : {
      "put" : {
        "tags" : [ "Role" ],
        "summary" : "Update role",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "RoleID",
          "in" : "path",
          "description" : "ID of the Role to change",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Update a role",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated"
          },
          "401" : {
            "description" : "Invalid Permissions"
          },
          "404" : {
            "description" : "Resource not found (Invalid RoleID)"
          }
        }
      }
    },
    "/role/create" : {
      "post" : {
        "tags" : [ "Role" ],
        "summary" : "Create a new role",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Created role object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Invalid Permissions"
          }
        }
      }
    },
    "/role/delete/{RoleID}" : {
      "delete" : {
        "tags" : [ "Role" ],
        "summary" : "Delete a role",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "RoleID",
          "in" : "path",
          "description" : "ID of Role",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Invalid Permissions"
          },
          "404" : {
            "description" : "Resource not found (Invalid RoleID)"
          }
        }
      }
    },
    "/{EmployeeID}/view" : {
      "get" : {
        "tags" : [ "Mastekeer" ],
        "summary" : "View employee information",
        "parameters" : [ {
          "name" : "EmployeeID",
          "in" : "path",
          "description" : "ID of Employee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get request successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mastekeer"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found (Invalid EmployeeID)"
          }
        }
      }
    },
    "/{EmployeeID}/update" : {
      "put" : {
        "tags" : [ "Mastekeer" ],
        "summary" : "Update employee information",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EmployeeID",
          "in" : "path",
          "description" : "ID of Employee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Update employee information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mastekeer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated"
          },
          "401" : {
            "description" : "Invalid Permissions"
          },
          "404" : {
            "description" : "Resource not found (Invalid EmployeeID)"
          }
        }
      }
    },
    "/{EmployeeID}/rolehistory" : {
      "get" : {
        "tags" : [ "Mastekeer" ],
        "summary" : "View employee role history",
        "parameters" : [ {
          "name" : "EmployeeID",
          "in" : "path",
          "description" : "ID of Employee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get request successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleHistory"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found (Invalid EmployeeID)"
          }
        }
      }
    },
    "/{EmployeeID}/rolehistory/create" : {
      "post" : {
        "tags" : [ "Mastekeer" ],
        "summary" : "Add new role history",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EmployeeID",
          "in" : "path",
          "description" : "ID of Employee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Created Role History object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Invalid Permissions"
          }
        }
      }
    },
    "/{EmployeeID}/rolehistory/delete" : {
      "delete" : {
        "tags" : [ "Mastekeer" ],
        "summary" : "Remove role history",
        "description" : "This operation can only be done by users with the correct permissions",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EmployeeID",
          "in" : "path",
          "description" : "ID of Employee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Invalid Permissions"
          }
        }
      }
    },
    "/{RoleID}/skills/view" : {
      "get" : {
        "tags" : [ "Role" ],
        "summary" : "View skills for a given role",
        "parameters" : [ {
          "name" : "RoleID",
          "in" : "path",
          "description" : "ID of Role",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get request successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SFIA"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found (Invalid RoleID)"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Competency" : {
        "type" : "object",
        "properties" : {
          "CompetencyID" : {
            "type" : "integer"
          },
          "CompetencyCategory" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "CompetencyDescription" : {
            "maxLength" : 200,
            "type" : "string"
          },
          "level1" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level2" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level3" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level4" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level5" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level6" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "VesrionID" : {
            "type" : "integer"
          }
        }
      },
      "SFIA" : {
        "type" : "object",
        "properties" : {
          "SkillID" : {
            "maxLength" : 20,
            "type" : "integer"
          },
          "SkillCategory" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "SkillSubcategory" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "Skill" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "SkillCode" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "SkillDescription" : {
            "maxLength" : 200,
            "type" : "string"
          },
          "level1" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level2" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level3" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level4" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level5" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level6" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level7" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "VersionID" : {
            "type" : "integer"
          }
        }
      },
      "CompanySkill" : {
        "type" : "object",
        "properties" : {
          "CompanySkillID" : {
            "maxLength" : 20,
            "type" : "integer"
          },
          "CompanySkillCategory" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "CompanySkillSubcategory" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "CompanySkill" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "CompanySkillDescription" : {
            "maxLength" : 200,
            "type" : "string"
          },
          "level1" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level2" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level3" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level4" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level5" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level6" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "level7" : {
            "maxLength" : 500,
            "type" : "string"
          },
          "VersionID" : {
            "type" : "integer"
          }
        }
      },
      "Role" : {
        "type" : "object",
        "properties" : {
          "RoleID" : {
            "type" : "integer"
          },
          "SkillTitle" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "RoleGroupID" : {
            "type" : "integer"
          },
          "RoleGrade" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "RoleSummary" : {
            "maxLength" : 400,
            "type" : "string"
          },
          "VersionID" : {
            "type" : "integer"
          }
        }
      },
      "Mastekeer" : {
        "type" : "object",
        "properties" : {
          "EmployeeID" : {
            "type" : "integer"
          },
          "EmployeeNumber" : {
            "type" : "integer"
          },
          "EmployeeSecondaryNumber" : {
            "type" : "integer"
          },
          "EmployeeGivenName" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "EmployeeSurname" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "EmployeeMail" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "EmployeeStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "EmployeeBenchStatus" : {
            "type" : "boolean"
          },
          "BaseLocationID" : {
            "type" : "integer"
          },
          "ClientID" : {
            "type" : "integer"
          },
          "EmployeeActiveDirectoryID" : {
            "type" : "integer"
          },
          "PermissionID" : {
            "type" : "integer"
          },
          "VersionID" : {
            "type" : "integer"
          }
        }
      },
      "RoleHistory" : {
        "type" : "object",
        "properties" : {
          "RoleHistoryID" : {
            "type" : "integer"
          },
          "EmployeeID" : {
            "type" : "integer"
          },
          "RoleID" : {
            "type" : "integer"
          },
          "RoleStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "RoleEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "RoleGroupID" : {
            "type" : "integer"
          },
          "RoleTitle" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "RoleGrade" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "RoleSummary" : {
            "maxLength" : 400,
            "type" : "string"
          }
        }
      }
    }
  }
}"
        },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
      }
    },
    "enabledForDiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
      }
    },
    "objectId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
      }
    },
    "keysPermissions": {
      "type": "array",
      "defaultValue": [
        "all"
      ],
      "metadata": {
        "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
      }
    },
    "secretsPermissions": {
      "type": "array",
      "defaultValue": [
        "all"
      ],
      "metadata": {
        "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Specifies whether the key vault is a standard vault or a premium vault."
      }
    },
    "secretsObject": {
      "type": "secureObject",
      "defaultValue": "{}",
      "metadata": {
        "description": "Specifies all secrets {\"secretName\":\"\",\"secretValue\":\"\"} wrapped in a secure object."
      }
    },
    "apiManagementServiceName": {
      "type": "string",
      "metadata": {
        "description": "API Managment Service Name"
      }
    },
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "string",
      "allowedValues": [
        "1",
        "2"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "Name of azure web app"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of resource group to be used for mysql server"
      }
    },
    "administratorLogin": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Database administrator login name"
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128,
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "databaseSkucapacity": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        4,
        8,
        16,
        32
      ],
      "metadata": {
        "description": "Azure database for MySQL compute capacity in vCores (2,4,8,16,32)"
      }
    },
    "databaseSkuName": {
      "type": "string",
      "defaultValue": "B_Gen5_1",
      "allowedValues": [
        "B_Gen5_1",
        "GP_Gen5_2",
        "GP_Gen5_4",
        "GP_Gen5_8",
        "GP_Gen5_16",
        "GP_Gen5_32",
        "MO_Gen5_2",
        "MO_Gen5_4",
        "MO_Gen5_8",
        "MO_Gen5_16",
        "MO_Gen5_32"
      ],
      "metadata": {
        "description": "Azure database for MySQL sku name "
      }
    },
    "databaseSkuSizeMB": {
      "type": "int",
      "allowedValues": [
        102400,
        51200,
        5120
      ],
      "defaultValue": 5120,
      "metadata": {
        "description": "Azure database for MySQL Sku Size "
      }
    },
    "databaseSkuTier": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "GeneralPurpose",
        "MemoryOptimized"
      ],
      "metadata": {
        "description": "Azure database for PostgreSQL pricing tier"
      }
    },
    "mysqlVersion": {
      "type": "string",
      "allowedValues": [
        "5.6",
        "5.7"
      ],
      "defaultValue": "5.7",
      "metadata": {
        "description": "MySQL version"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "databaseSkuFamily": {
      "type": "string",
      "defaultValue": "Gen5",
      "metadata": {
        "description": "Azure database for PostgreSQL sku family"
      }
    },
    "hostingPlanName": {
      "type": "string",
      "metadata": {
        "description": "Name of app service plan"
      }
    }
  },
  "variables": {
    "databaseName": "[concat(parameters('siteName'), 'db')]",
    "serverName": "[concat(parameters('resourceGroupName'), 'MSM')]",
    "hostingPlanName": "[concat(parameters('hostingPlanName'))]",
    "apiManagementServiceName": "[concat(parameters('apiManagementServiceName'))]",
    "MSMVnetPrefix": "10.1.0.0/28",
    "MSMVnetSubnet1Name": "MSMSubnet",
    "MSMVnetSubnet1Prefix": "10.1.0.0/28"
  },
  "resources": [
    {
       "type": "Microsoft.ApiManagement/service/apis",
            "name": "[concat(parameters('apim_name'), '/' ,parameters('api_name'))]",
            "apiVersion": "2018-06-01-preview",
            "properties": {
                "path": "MastekSkillsMap",
                "contentValue": "openapi_json",
                "contentFormat": "swagger-json"
            }
        },

    {
      "apiVersion": "2016-09-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "workerSizeId": "1",
        "reserved": true,
        "numberOfWorkers": 0,
        "hostingEnvironment": ""
      },
      "sku": {
        "Tier": "Standard",
        "Name": "S1"
      }
    },
    {
      "apiVersion": "2016-08-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "properties": {
        "name": "[parameters('siteName')]",
        "serverFarmId": "[variables('hostingPlanName')]",
        "hostingEnvironment": ""
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "connectionstrings",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
          ],
          "properties": {
            "defaultConnection": {
              "value": "[concat('Database=', variables('databaseName'), ';Data Source=', reference(resourceId('Microsoft.DBforMySQL/servers',variables('serverName'))).fullyQualifiedDomainName, ';User Id=', parameters('administratorLogin'),'@', variables('serverName'),';Password=', parameters('administratorLoginPassword'))]",
              "type": "MySql"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2018-02-14",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "objectId": "[parameters('objectId')]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]"
            }
          }
        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"
        },
        "networkAcls": {
          "value": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', parameters('secretsObject').secrets[copyIndex()].secretName)]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "copy": {
        "name": "secretsCopy",
        "count": "[length(parameters('secretsObject').secrets)]"
      },
      "properties": {
        "value": "[parameters('secretsObject').secrets[copyIndex()].secretValue]"
      }
    },
    {
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "name": "[variables('serverName')]",
      "type": "Microsoft.DBforMySQL/servers",
      "sku": {
        "name": "[parameters('databaseSkuName')]",
        "tier": "[parameters('databaseSkuTier')]",
        "capacity": "[parameters('databaseSkucapacity')]",
        "size": "[parameters('databaseSkuSizeMB')]",
        "family": "[parameters('databaseSkuFamily')]"
      },
      "properties": {
        "version": "[parameters('mysqlVersion')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "storageProfile": {
          "storageMB": "[parameters('databaseSkuSizeMB')]",
          "backupRetentionDays": "7",
          "geoRedundantBackup": "Disabled"
        },
        "sslEnforcement": "Enabled"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2017-12-01",
          "dependsOn": [
            "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'),'/databases/' , variables('databaseName'))]",
            "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
          ],
          "location": "[parameters('location')]",
          "name": "AllowAzureIPs",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "apiVersion": "2017-12-01",
          "properties": {
            "charset": "utf8",
            "collation": "utf8_general_ci"
          },
          "dependsOn": [
            "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
          ]
        },
        {
          "type": "Microsoft.DBforMySQL/servers/configurations",
          "apiVersion": "2017-12-01-preview",
          "name": "[concat(variables('serverName'), '/time_zone')]",
          "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/servers', variables('serverName'))]"
          ],
          "properties": {
            "value": "+0:00"
          }
        }
      ]
    },
    {
      "name": "MSMVnet",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [ ],
      "tags": {
        "displayName": "MSMVnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('MSMVnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('MSMVnetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('MSMVnetSubnet1Prefix')]"
            }
          }
          
        ]
      }
    }
  ]
}